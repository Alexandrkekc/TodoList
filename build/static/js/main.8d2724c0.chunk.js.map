{"version":3,"sources":["Modal/Modal.js","Context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","state","isOpen","Fragment","Button","variant","onClick","setState","this","className","React","Component","Context","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","fontSize","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","join","type","checked","id","title","IconButton","aria-label","ul","listStyle","margin","TodoList","props","todos","map","i","onToggle","Loader","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d2724c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Modal.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => this.setState({ isOpen: true })}\r\n        >\r\n          Open modal\r\n        </Button>\r\n\r\n        {this.state.isOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n              <h1>Modal title</h1>\r\n              <p>Modal text</p>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => this.setState({ isOpen: false })}\r\n              >\r\n                Close modal\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../Context';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { FullscreenExit } from '@material-ui/icons';\r\n\r\nconst styles = {\r\n  li: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '.5rem 1rem',\r\n    border: '2px solid black',\r\n    borderRadius: '4px',\r\n    marginBottom: '.5rem',\r\n    fontSize: '18px',\r\n  },\r\n  input: {\r\n    marginRight: '1rem',\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push('done');\r\n  }\r\n\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(' ')}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          style={styles.input}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <strong>{++index}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n      <IconButton aria-label=\"delete\" onClick={() => removeTodo(todo.id)}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: 'none',\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n      {props.todos.map((todo, i) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={i}\r\n            onChange={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\r\n      <div className=\"lds-circle\">\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\nimport Modal from './Modal/Modal';\nimport TodoList from './Todo/TodoList';\nimport Context from './Context';\n\nimport Loader from './Loader';\n\nconst AddTodo = React.lazy(\n  () =>\n    new Promise((resolve) => {\n      setTimeout(() => resolve(import('./Todo/AddTodo')), 1000);\n    })\n);\n\nfunction App() {\n  let [todos, setTodos] = React.useState([\n    // { id: 1, completed: false, title: 'HTML5' },\n    // { id: 2, completed: false, title: 'CSS3' },\n    // { id: 3, completed: false, title: 'JavaScript' },\n    // { id: 4, completed: false, title: 'React' },\n  ]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then((response) => response.json())\n      .then((todos) => {\n        setTodos(todos);\n        setLoading(false);\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          id: Date.now(),\n          completed: false,\n          title,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>Frontend tutorial</h1>\n        <Modal />\n        <React.Suspense fallback={<Loader />}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length !== 0 ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>Нет Записей</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}