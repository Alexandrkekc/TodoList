{"version":3,"sources":["Context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","fontSize","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","IconButton","aria-label","onClick","ul","listStyle","margin","TodoList","props","todos","map","i","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","Button","App","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1717c18.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../Context';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = {\r\n  li: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '.5rem 1rem',\r\n    border: '2px solid black',\r\n    borderRadius: '4px',\r\n    marginBottom: '.5rem',\r\n    fontSize: '18px',\r\n  },\r\n  input: {\r\n    marginRight: '1rem',\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push('done');\r\n  }\r\n\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(' ')}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          style={styles.input}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <strong>{++index}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n      <IconButton aria-label=\"delete\" onClick={() => removeTodo(todo.id)}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: 'none',\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n      {props.todos.map((todo, i) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={i}\r\n            onChange={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nfunction AddTodo({ onCreate }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onCreate(value);\r\n      setValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginBottom: '1rem' }} onSubmit={submitHandler}>\r\n      <input value={value} onChange={(event) => setValue(event.target.value)} />\r\n      <Button type=\"submit\">Добавить запись</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n};\r\nexport default AddTodo;\r\n","import React from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './Context';\nimport AddTodo from './Todo/AddTodo';\n\nfunction App() {\n  let [todos, setTodos] = React.useState([\n    { id: 1, completed: false, title: 'HTML5' },\n    { id: 2, completed: false, title: 'CSS3' },\n    { id: 3, completed: false, title: 'JavaScript' },\n    { id: 4, completed: false, title: 'React' },\n  ]);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          id: Date.now(),\n          completed: false,\n          title,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>Frontend tutorial</h1>\n        <AddTodo onCreate={addTodo} />\n        {todos.length !== 0 ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : (\n          <p>Нет записей</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}